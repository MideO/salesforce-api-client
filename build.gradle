apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'



group 'com.github.mideo'

version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {

    compile(
            [group: 'com.force.api', name: 'force-wsc', version: '36.3.0'],
            [group: 'com.force.api', name: 'force-apex-api', version: '36.0.0'],
            [group: 'com.force.api', name: 'force-partner-api', version: '36.0.0'],
            [group: 'com.force.api', name: 'force-metadata-api', version: '36.0.0'],
            [group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'],
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'org.apache.commons', name: 'commons-csv', version: '1.4'],
            [group: 'commons-io', name: 'commons-io', version: '2.5']

    )
    testCompile(
            'org.codehaus.groovy:groovy-all:2.2.0',
            'org.spockframework:spock-core:0.7-groovy-2.0',
            'cglib:cglib-nodep:2.2',
            'org.objenesis:objenesis:1.2'
    )
}



test {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

jar {
    archivesBaseName = rootProject.name
    group = group
    version = version
    manifest {
        attributes 'Implementation-Title': rootProject.name,
                'Implementation-Version': version,
                'Built-Date': new Date(),
                'Built-By': 'Mide Ojikutu' ,
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar

}

task wrapper(type: Wrapper) {
    gradleVersion =  2.13
}

signing {
    sign configurations.archives
    required = { gradle.taskGraph.hasTask("uploadArchives") && !version.endsWith("SNAPSHOT") }
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: "${System.env.ossrhUsername}", password: "${System.env.ossrhPassword}")
//                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: "${System.env.ossrhUsername}", password: "${System.env.ossrhPassword}")
//                authentication(userName: ossrhUsername, password: ossrhPassword)
            }



            pom.project {
                name 'Salesforce Api Client'
                packaging 'jar'
                description 'Salesforce Api Client'

            scm {
                connection 'git@github.com:MideO/salesforce-api-client.git'
                developerConnection 'git@github.com:MideO/salesforce-api-client.git'
                url 'https://github.com/MideO/salesforce-api-client'
            }

            licenses {
                license {
                    name 'The Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }

            developers {
                developer {
                    id 'mideo'
                    name 'Mide Ojikutu'
                    email 'mide.ojikutu@gmail.com'
                }
            }

            }

        }
    }
}
